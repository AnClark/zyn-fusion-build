diff --git a/include/mruby.h b/include/mruby.h
index 8adce28..7d3364d 100644
--- a/include/mruby.h
+++ b/include/mruby.h
@@ -28,6 +28,7 @@
 #ifndef MRUBY_H
 #define MRUBY_H
 
+
 #ifdef __cplusplus
 #define __STDC_LIMIT_MACROS
 #define __STDC_CONSTANT_MACROS
@@ -37,6 +38,13 @@
 #include <stdint.h>
 #include <stddef.h>
 #include <limits.h>
+#include <float.h>
+
+//int DBL_epsILON;
+//DBL_EPSILON
+//#ifndef DBL_EPSILON
+//#define DBL_EPSILON 1e-6
+//#endif
 
 #ifdef __cplusplus
 #ifndef SIZE_MAX
@@ -48,6 +56,7 @@
 #endif
 #endif
 
+
 #ifdef MRB_DEBUG
 #include <assert.h>
 #define mrb_assert(p) assert(p)
diff --git a/src/backtrace.c b/src/backtrace.c
index d634123..9f1c15d 100644
--- a/src/backtrace.c
+++ b/src/backtrace.c
@@ -209,11 +209,13 @@ exc_output_backtrace(mrb_state *mrb, struct RObject *exc, output_stream_func fun
 
 #ifndef MRB_DISABLE_STDIO
 
+char superhack[1024*20];
+
 static void
 print_backtrace(mrb_state *mrb, mrb_value backtrace)
 {
   int i, n;
-  FILE *stream = stderr;
+char stream[1000];
 
   fprintf(stream, "trace:\n");
 
@@ -221,43 +223,46 @@ print_backtrace(mrb_state *mrb, mrb_value backtrace)
   for (i = 0; i < n; i++) {
     mrb_value entry = RARRAY_PTR(backtrace)[i];
 
-    if (mrb_string_p(entry)) {
-      fprintf(stream, "\t[%d] %.*s\n", i, (int)RSTRING_LEN(entry), RSTRING_PTR(entry));
-    }
+    sprintf(stream, "\t[%d] %.*s\n", i, (int)RSTRING_LEN(entry), RSTRING_PTR(entry));
+    strcat(superhack, stream);
+
   }
 }
 
 static void
 print_backtrace_saved(mrb_state *mrb)
 {
-  int i, ai;
-  FILE *stream = stderr;
+  int i;
+  char *stream[1000];
 
-  fprintf(stream, "trace:\n");
-  ai = mrb_gc_arena_save(mrb);
+  strcat(superhack, "print_backtrace_saved");
+
+  strcat(superhack, "trace:\n");
   for (i = 0; i < mrb->backtrace.n; i++) {
     mrb_backtrace_entry *entry;
 
     entry = &(mrb->backtrace.entries[i]);
-    fprintf(stream, "\t[%d] %s:%d", i, entry->filename, entry->lineno);
+    sprintf(stream, "\t[%d] %s:%d", i, entry->filename, entry->lineno);
+    strcat(superhack, stream);
 
     if (entry->method_id != 0) {
       const char *method_name;
 
       method_name = mrb_sym2name(mrb, entry->method_id);
       if (entry->klass) {
-        fprintf(stream, ":in %s%c%s",
+        sprintf(stream, ":in %s%c%s",
                 mrb_class_name(mrb, entry->klass),
                 entry->sep,
                 method_name);
+        strcat(superhack, stream);
       }
       else {
-        fprintf(stream, ":in %s", method_name);
+        sprintf(stream, ":in %s", method_name);
+        strcat(superhack, stream);
       }
-      mrb_gc_arena_restore(mrb, ai);
     }
 
-    fprintf(stream, "\n");
+    strcat(superhack, "\n");
   }
 }
 
diff --git a/src/fmt_fp.c b/src/fmt_fp.c
index 483e04c..19633c0 100644
--- a/src/fmt_fp.c
+++ b/src/fmt_fp.c
@@ -36,6 +36,10 @@ SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 #include <mruby.h>
 #include <mruby/string.h>
 
+#ifndef LDBL_EPSILON
+#define LDBL_EPSILON 1e-6
+#endif
+
 struct fmt_args {
   mrb_state *mrb;
   mrb_value str;
